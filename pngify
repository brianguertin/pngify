#!/bin/bash
##
## Created by Michael Vosseller on 10/01/14.
## Copyright (c) 2014 MPV Software, LLC. All rights reserved.
##
## This script quickly converts PDF images to PNGs at @1X, @2X, and @3X scale.
## You can specify the PDF images to convert and/or specify directories and 
## all PDF files under them will be processed.
##
## This may be useful for sharing image assets between iOS and Android apps 
## where the iOS app uses PDF assets but the Android app uses PNG assets. 
## 
## This script requires bash, ImageMagick, Ghostscript, and XQuartz
##
## For ImageMagick and Ghostscript I use the second and third installers here:
## http://cactuslab.com/imagemagick/
##
## The XQuartz installer can be found here:
## http://xquartz.macosforge.org/
##
##
## NOTE: if you want to scale a PDF directly to say 100x100 run gs directly
## gs -o outfile.pdf -sDEVICE=pdfwrite -g1000x1000 -dFIXEDMEDIA -dPDFFitPage -dCompatibilityLevel=1.4 infile.pdf
##

## Configuration
scalevalues=(1 1.5 2 3 4)
dpi=72

## Function to convert a PDF to PNGs in each scale
function convertPdfToPngs {

    pdffile=$1

    echo "Processing: $pdffile"

    filename=$(basename "$pdffile")
    basename="${filename%.*}"
    basename=$(echo $basename | sed -e 's/[^[:alnum:]_\.]/_/g')

    ## for each scale value 
    for scale in ${scalevalues[@]}; do
	
	## scalestr like "@2x" and "@3x"
	scalestr="";
	if [ $scale = "1" ]; then
	    scalestr="mdpi"
	elif [ $scale = "1.5" ]; then
	    scalestr="hdpi"
	elif [ $scale = "2" ]; then
	    scalestr="xhdpi"
	elif [ $scale = "3" ]; then
	    scalestr="xxhdpi"
	elif [ $scale = "4" ]; then
	    scalestr="xxxhdpi"
	fi

	## density value like 72, 144, 216
	density=$(expr $dpi*$scale | bc);
	
	destdir="drawable-$scalestr"
	mkdir -p "$destdir"
	pngfile="$destdir/$basename.png"
	echo "Creating: $pngfile"

	## convert -density 144 image.pdf image@2x.png	
   	convert -background none -density $density "$pdffile" "$pngfile"
    done
}



## Command line arguments
filesAndDirs=$@
if [ "$filesAndDirs" == "" ]; then
    scriptname=$(basename "$0")
    echo "Usage: $scriptname <filenames or directories with pdf/svg files>"
    echo "WARNING: Script will overwrite existing .png images if they exist"
    exit -1;
fi

## Find PDFs and process each
for pdffile in `find $filesAndDirs -iname "*\.pdf" -o -iname "*\.svg"`; do
    convertPdfToPngs $pdffile
done


